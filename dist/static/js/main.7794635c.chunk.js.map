{"version":3,"sources":["actions/loadChildrenAction.js","actions/toggleChildrenAction.js","actions/Modal/openModalAction.js","components/Node/index.jsx","actions/Loading/setLoadingAction.js","actions/Loading/setLoadedAction.js","components/EmptyNode/index.jsx","components/Column/index.jsx","actions/loadRootNodeAction.js","utils/NodeExplorer.js","components/Spinner/index.jsx","components/NodeMatrix/__Components/Modal/index.jsx","actions/Modal/closeModalAction.js","components/NodeMatrix/index.jsx","App.js","serviceWorker.js","utils/RequestsManager.js","reducers/modalReducer.js","actions/setSourcesAction.js","reducers/variablesReducer.js","reducers/index.js","reducers/nodeReducer.js","reducers/matrixReducer.js","store/store.js","index.js"],"names":["loadChildrenAction","parent","requestUrl","type","toggleChildrenAction","Modal_openModalAction","content","data","Node","_React$PureComponent","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","onOpenModal","props","openModalAction","enrolleeId","id","handleClick","_this$props","onLoad","showChildren","sourceUrl","numberOfChildren","inherits","createClass","key","value","_this2","_this$props2","title","classList","push","react_default","a","createElement","className","join","onClick","React","PureComponent","nodeProps","PropTypes","string","isRequired","bool","number","children","arrayOf","shape","defaultProps","connect","state","variables","dispatch","show","url","toggleChildren","loading","loadChildren","EmptyNode","symbol","viewBox","preserveAspectRatio","width","height","x1","y1","x2","y2","Column","nodes","map","n","i","isEmpty","EmptyNode_EmptyNode","assign","components_Node","loadRootNodeAction","NodeExplorer","root","findInTree","node","toConsumableArray","JSON","parse","stringify","bottom","levels","index","newLevel","reduce","set","forEach","child","parentNode","amount","sum","getOpenedChildrenWidth","reducers","needle","Spinner","ModalElement","onCloseModal","closeModal","open","detailsUrl","index_es","onClose","src","modal","NodeMatrix","didMount","maxColumnSize","getLevels","clone","balancedLevels","topOffset","j","paddingAmount","offset","topPadding","generateEmptyNodes","y","bottomOffset","bottomPadding","nodeLeft","empty","lastNode","reducedBalancedLevels","reverse","splice","end","cols","level","Column_Column","style","display","Modal","spinner","components_Spinner","rootNode","matrix","matrixWidth","loadRoot","App","components_NodeMatrix","Boolean","window","location","hostname","match","RequestsManager","requestType","requestName","GET_CHILDREN","axios","get","then","response","catch","errors","GET_ROOT","defaultState","setSourcesAction","combineReducers","undefined","action","objectSpread","explorer","addChildren","getRoot","middleWare","thunk","createLogger","paths","document","getElementById","getAttribute","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7794635c.chunk.js","sourcesContent":["export default (parent, requestUrl) => ({\n    type: 'LOAD_CHILDREN_NODES',\n    parent,\n    requestUrl\n});","export default (parent) => ({\n    type: 'TOGGLE_CHILDREN_NODES',\n    parent \n});","export default (content) => ({\n    type: 'OPEN_MODAL',\n    data: content\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport setLoadingAction from '../../actions/Loading/setLoadingAction';\nimport setLoadedAction from '../../actions/Loading/setLoadedAction';\nimport loadChildren from '../../actions/loadChildrenAction';\nimport toggleChildren from '../../actions/toggleChildrenAction';\nimport openModalAction from '../../actions/Modal/openModalAction';\n\nimport './styles.css';\n\nexport class Node extends React.PureComponent {\n    onOpenModal = () => {\n        this.props.openModalAction({enrolleeId: this.props.id})\n    };\n\n    handleClick = () => {\n        const {\n            id, onLoad, showChildren, sourceUrl, numberOfChildren,\n        } = this.props;\n        \n        if (numberOfChildren > 0) {\n            onLoad(id, showChildren, sourceUrl);\n        }\n    }\n\n    render() {\n        const { title, numberOfChildren } = this.props;\n        const classList = ['Node__Container'];\n\n        if (numberOfChildren === 0) {\n            classList.push('disabled');\n        }\n\n        return (\n            <div className={classList.join(' ')}>\n                <span onClick={() => this.handleClick()} className=\"Node__Title\">{title} {numberOfChildren}</span>\n                <div className=\"Node__ModalButtonContainer\" onClick={this.onOpenModal}>\n                    <i className=\"fa fa-external-link\"></i>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport const nodeProps = {\n    id: PropTypes.string.isRequired,\n    parent: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    showChildren: PropTypes.bool,\n    numberOfChildren: PropTypes.number.isRequired,\n    children: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        numberOfChildren: PropTypes.number.isRequired,\n    })),\n    sourceUrl: PropTypes.string,\n};\nnodeProps.children = PropTypes.arrayOf(PropTypes.shape(nodeProps).isRequired);\n\nNode.propTypes = nodeProps;\n\nNode.defaultProps = {\n    showChildren: false,\n    children: [],\n}\n\nexport default connect(\n    state => ({\n        sourceUrl: state.variables.sourceUrl,\n    }),\n    dispatch => ({\n        onLoad: (id, show, url) => {\n            if (show) {\n                dispatch(toggleChildren(id));\n            } else {\n                dispatch(setLoadingAction());\n                dispatch(loadChildren(id, url));\n                dispatch(toggleChildren(id));\n                dispatch(setLoadedAction());\n            }\n        },\n        openModalAction: (enrolleeId) => dispatch(openModalAction(enrolleeId)),\n    }),\n)(Node);","export default () => ({\n    type: 'SET_LOADING',\n    data: {\n        loading: true,\n    }\n});","export default () => ({\n    type: 'SET_LOADING_END',\n    data: {\n        loading: false,\n    }\n});","import React from 'react';\n\nimport './styles.css';\n\nexport default class EmptyNode extends React.PureComponent {\n    render() {\n        const { type } = this.props;\n        let symbol = \"\";\n        switch (type) {\n            case \"space\":\n                symbol = \" \";\n                break;\n            case \"pipe\":\n                symbol = (\n                <div className=\"EmptyNode__SVGContainer\">\n                    <svg viewBox={\"0 0 100% 100%\"} preserveAspectRatio=\"xMidYMid meet\" width=\"100%\" height=\"100%\">\n                        <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" className=\"SVG_Line\" />\n                    </svg>\n                </div>\n                );\n                break;\n            case \"line\":\n                symbol = (\n                    <div className=\"EmptyNode__SVGContainer\" >\n                        <svg viewBox={\"0 0 100% 100%\"} preserveAspectRatio=\"xMidYMid meet\" width=\"100%\" height=\"100%\">\n                            <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" className=\"SVG_Line\"/>\n                            <line x1=\"0\" y1=\"50%\" x2=\"100%\" y2=\"50%\" className=\"SVG_Line\" />\n                        </svg>\n                    </div>\n                );\n                break;\n            case \"last-line\":\n                symbol = (\n                    <div className=\"EmptyNode__SVGContainer\" >\n                        <svg viewBox={\"0 0 100% 100%\"} preserveAspectRatio=\"xMidYMid meet\" width=\"100%\" height=\"100%\">\n                            <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"50%\" className=\"SVG_Line\" />\n                            <line x1=\"0\" y1=\"50%\" x2=\"100%\" y2=\"50%\" className=\"SVG_Line\" />\n                        </svg>\n                    </div>\n                );\n                break;\n            default:\n                symbol = \"-\";\n                break;\n        }\n\n        return (\n            <div className=\"EmptyNode__Container\">\n                {symbol}\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Node, { nodeProps } from '../Node';\nimport EmptyNode from '../EmptyNode';\nimport './index.css'\n\nexport default class Column extends React.PureComponent {\n    render(){\n        const { nodes } = this.props;\n        const content = nodes.map( (n, i) => {\n            if (n.isEmpty){\n                return (<EmptyNode key={i} {...n} />);\n            }\n            return (<Node key={i} {...n} />);\n        });\n        return (\n            <div className=\"Column__Container\">{content}</div>\n        );\n    }\n}\n\nColumn.propTypes = {\n    nodes: PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.shape(nodeProps),\n        PropTypes.shape({\n            isEmpty: PropTypes.bool.isRequired,\n            type: PropTypes.string.isRequired\n        }) \n    ])),\n};","export default (url) => ({\n    type: 'LOAD_ROOT_NODE', \n    requestUrl: url\n});","export default class NodeExplorer {\n    constructor(root){\n        this.root = root;\n    }\n\n    findNode(id){\n       \n        return NodeExplorer.findInTree(this.root, id);\n    }    \n\n    addChildren(parent, children){\n        const node = NodeExplorer.findInTree(this.root, parent);\n\n        if (!node.children) {\n            node.children = [];\n        }\n\n        node.children = [...node.children, ...children];        \n    }\n\n    toggleChildren(id){\n        const node = NodeExplorer.findInTree(this.root, id);\n        return node.showChildren = !node.showChildren;\n    }\n\n    getRoot(){\n        return this.root;\n    }\n\n    static clone(root){\n        return JSON.parse(JSON.stringify(root));\n    }\n\n    static getLevels(node){\n        let bottom = false;\n        let levels = [ [[node]] ];\n        let index = 0;\n\n        while(!bottom){\n            let lastLevel = levels[index].reduce((nodes, set) => [...nodes, ...set], []);\n            \n            let newLevel = lastLevel.reduce((children, node) => {\n                if (!node.children) {\n                    node.children = [];\n                }\n\n                node.children.forEach(child => {\n                    child.parentNode = node;\n                });\n\n                return node.children.length && node.showChildren ? [...children, node.children] : children;\n            }, []);\n\n            if (newLevel.length > 0){\n                levels[++index] = newLevel;\n            } else {\n                bottom = true;\n            }\n        }\n        return levels;\n    }\n\n    static generateEmptyNodes(type, amount){\n        const nodes = [];\n        for (let i = 0; i < amount; i++){\n            nodes.push({isEmpty: true, type});\n        }\n        return nodes;\n    }\n\n    static getOpenedChildrenWidth(node){\n        if (!node.showChildren || node.children.length === 0){\n            return 0;\n        }\n\n        return node.children.length + node.children.reduce((sum, child) => (NodeExplorer.getOpenedChildrenWidth(child) + sum), 0);\n    }\n\n    static getChildren(nodes){\n        nodes.reducers((children, node) => [...children, ...node.children],  )\n    }\n\n\n    static findInTree(node, id){\n        if (node.id === id){\n            return node;\n        }\n\n        if (!node.children) {\n            node.children = [];\n        }\n\n        for(let i = 0; i < node.children.length; i++){\n            const needle = NodeExplorer.findInTree(node.children[i], id);\n\n            if (needle) {\n                return needle;\n            }\n        }\n        return null;\n    }\n}","import React from 'react';\n\nimport './styles.css';\n\nconst Spinner = () => (\n    <div className=\"Spinner__Container\">\n        <div className=\"lds-dual-ring\"></div>\n    </div>\n);\n\nexport default Spinner;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Modal from \"react-responsive-modal\";\n\nimport './styles.css';\nimport closeModalAction from '../../../../actions/Modal/closeModalAction';\n\nexport class ModalElement extends React.PureComponent {\n    onCloseModal = () => {\n        this.props.closeModal();\n    };\n\n    render() {\n        const {\n            open, detailsUrl, id,\n        } = this.props;\n\n        return (\n            <Modal\n                open={open}\n                onClose={this.onCloseModal}\n            >\n                <div className=\"ModalElement__IframeContainer\">\n                    <iframe\n                        width=\"100%\"\n                        height=\"100%\"\n                        src={detailsUrl + '/associate/info/' + id}>\n                    </iframe>\n                </div>\n            </Modal>\n        )\n    }\n}\n\nexport default connect(\n    state => ({\n        open: state.modal.open,\n        detailsUrl: state.variables.detailsUrl,\n        id: state.modal.content.enrolleeId,\n    }),\n    dispatch => ({\n        closeModal: () => { dispatch(closeModalAction())}\n    }),\n)(ModalElement);\n\nModalElement.propTypes = {\n    open: PropTypes.bool.isRequired,    \n    detailsUrl: PropTypes.string,    \n}","export default () => ({\n    type: 'CLOSE_MODAL',\n    data: null\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { nodeProps } from '../Node';\nimport Column from '../Column';\nimport loadRoot from '../../actions/loadRootNodeAction';\nimport NodeExplorer from '../../utils/NodeExplorer';\nimport setLoadingAction from '../../actions/Loading/setLoadingAction';\nimport setLoadedAction from '../../actions/Loading/setLoadedAction';\nimport Spinner from '../Spinner';\nimport Modal from './__Components/Modal';\nimport './styles.css';\n\nexport class NodeMatrix extends React.PureComponent {\n    componentDidMount() {\n        this.props.didMount();\n    }\n\n    render(){\n        const { root, open, maxColumnSize, loading, detailsUrl } = this.props;\n        const levels = root ? NodeExplorer.getLevels(NodeExplorer.clone(root)) : [];\n        const balancedLevels = [];\n\n        for (let i = 0; i < levels.length; i++) {\n            balancedLevels[i] = [];\n            let topOffset = 0\n            for (let j = 0; j < levels[i].length; j++) {\n                if (levels[i][j].length > 0){\n                    const parentOffset = levels[i][j][0].parentNode ? levels[i][j][0].parentNode.offset : 0;  \n                    const paddingAmount = parentOffset - balancedLevels[i].length;\n                    const topPadding = NodeExplorer.generateEmptyNodes('space', paddingAmount);\n\n                    balancedLevels[i] = [...balancedLevels[i], ...topPadding];\n                    topOffset += paddingAmount;\n                }\n\n                for (let y = 0; y < levels[i][j].length; y++) {\n                    const node = levels[i][j][y];\n                    node.offset = ++topOffset;\n                    let bottomOffset = NodeExplorer.getOpenedChildrenWidth(node);\n                    topOffset += bottomOffset;\n                    let bottomPadding = '';\n                    \n                    bottomPadding = NodeExplorer.generateEmptyNodes('pipe', bottomOffset);\n                    balancedLevels[i] = [...balancedLevels[i], node, ...bottomPadding];\n                }\n                \n            }\n        }\n\n        for (let i = balancedLevels.length - 1; i > 0; i--) {\n            for (let j = 0; j < balancedLevels[i].length; j++) {\n                const nodeLeft = balancedLevels[i - 1][j];\n                const node = balancedLevels[i][j];\n\n                if (!node.isEmpty && nodeLeft && nodeLeft.type) {\n                    nodeLeft.type = 'line';\n                }\n            }\n        }\n\n        for (let i = balancedLevels.length - 1; i >= 0; i--) {\n            let empty = true;\n            let lastNode = true;\n            for (let j = balancedLevels[i].length -1; j > 0; j--) {\n                const node = balancedLevels[i][j];\n                if (node && node.type) {\n                    switch (node.type) {\n                        case \"pipe\":\n                            if (empty) {\n                                node.type = 'space';\n                            }\n                            break;\n                        case \"line\":\n                            if (empty || lastNode) {\n                                empty = false;\n                                lastNode = false;\n                                node.type = 'last-line';\n                            }\n                            break;\n                        default:\n                            break;\n                    }\n                } else {\n                    lastNode = true;\n                    empty = true;\n                }\n            }\n        }\n\n        const reducedBalancedLevels = balancedLevels.reverse().splice(0, maxColumnSize).reverse();\n\n        let empty = 0;\n        let end = true;\n        while (end) {\n            if (\n                reducedBalancedLevels[0]\n                 && reducedBalancedLevels[0][empty].type\n                 && reducedBalancedLevels[0][empty].type === 'space'\n            ) {\n                ++empty;\n            } else {\n                end = false;\n            }\n        }\n\n        const cols = reducedBalancedLevels.map((level, i) => (<Column key={i} nodes={level.splice(empty)} />));\n\n        const content = (\n            <div style={{display: 'flex'}}>\n                {cols}\n                <Modal />\n            </div>\n        );\n\n        const spinner = (\n            <Spinner />\n        );\n\n        return loading ? spinner : content;\n    }\n}\n\nexport default connect(\n    state => ({\n        root: state.nodes.rootNode,\n        width: state.matrix.matrixWidth,\n        maxColumnSize: state.variables.maxColumnSize,\n        loading: state.variables.loading,\n        sourceUrl: state.variables.sourceUrl,\n    }),\n    dispatch => ({\n        didMount: (url) => {\n            dispatch(setLoadingAction());\n            dispatch(loadRoot(url));\n            dispatch(setLoadedAction());\n        },\n    }),\n)(NodeMatrix);\n\nNodeMatrix.propTypes = {\n    width: PropTypes.number.isRequired,\n    root: PropTypes.shape(nodeProps),\n    maxColumnSize: PropTypes.number.isRequired,\n};","import React from 'react';\nimport './App.css';\nimport NodeMatrix from './components/NodeMatrix'\n\nfunction App() {\n  return (\n    <NodeMatrix width = {6} />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\n\nexport default (requestType, url) => {\n    switch (requestType) {\n        case requestName.GET_CHILDREN:\n            axios.get(url)\n                .then(function (response) {\n                    return response;\n                })\n                .catch(function () {\n                    return {\n                        errors: [\"Request failed\"]\n                    };\n                });\n        case requestName.GET_ROOT:\n            axios.get(url)\n                .then(function (response) {\n                    return response;\n                })\n                .catch(function () {\n                    return {\n                        errors: [\"Request failed\"]\n                    };\n                });\n        default:\n            return {\n                errors: [\"Request not found\"]\n            }\n    }\n}\n\nexport const requestName = {\n    GET_CHILDREN: 'get_children',\n    GET_ROOT: 'get_root'\n}\n","import openModalAction from '../actions/Modal/openModalAction';\nimport closeModalAction from '../actions/Modal/closeModalAction';\n\nconst defaultState = {\n    open: false,\n    content: {\n        enrolleeId: ''\n    }\n}\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {   \n        case openModalAction(state).type:\n            {\n                const data = {\n                    open: true,\n                    content: {\n                        ...action.data\n                    }\n                };\n\n                return {...state, ...data};\n            }            \n        case closeModalAction(state).type:\n            {\n                const data = {\n                    open: false,\n                    content: {\n                        enrolleeId: ''\n                    }\n                };\n\n                return {...state, ...data};\n            }\n        default:\n            return state\n    }\n}\n","export default (content) => ({\n    type: 'SET_SOURCE_URLS',\n    data: content\n});","import setLoadingAction from '../actions/Loading/setLoadingAction';\nimport setLoadedAction from '../actions/Loading/setLoadedAction';\nimport setSourcesAction from '../actions/setSourcesAction';\n\nconst defaultState = {\n    maxColumnSize: 5,\n    loading: false,\n    sourceUrl: '',\n    detailsUrl: '',\n}\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case setLoadingAction(state).type:\n            {\n                return {...state, ...action.data};\n            }\n        case setLoadedAction(state).type:\n            {\n                return {...state, ...action.data};\n            }\n        case setSourcesAction(state).type:\n            {\n                return {...state, ...action.data};\n            }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport nodes from './nodeReducer';\nimport matrix from './matrixReducer';\nimport modal from './modalReducer';\nimport variables from './variablesReducer';\n\nexport default combineReducers({\n    nodes,\n    matrix,\n    modal,\n    variables,\n});","import loadRoot from '../actions/loadRootNodeAction';\nimport loadChildren from '../actions/loadChildrenAction';\nimport toggleChildren from '../actions/toggleChildrenAction';\nimport NodeExplorer from '../utils/NodeExplorer';\nimport generateNodes from '../utils/NodeGenerator';\nimport RequestsManager, { requestName } from '../utils/RequestsManager';\n\n\nconst rootNode = {\n    id: \"1\",\n    title: \"Root\",\n    parent: \"0\",\n    numberOfChildren: 3,\n}\n\nexport default (state = { rootNode: null }, action) => {\n    switch (action.type) {\n        case loadRoot().type:\n            const children = RequestsManager(requestName.GET_ROOT, action.requestUrl);\n            // const children = rootNode;\n\n            if (children.errors) {\n                return state;\n            }\n\n            return {\n                rootNode: { ...children }\n            }\n        case loadChildren(0).type: {\n            const explorer = new NodeExplorer(NodeExplorer.clone(state.rootNode));\n            // const children = generateNodes(3, action.parent);\n            const url = action.requestUrl + `?id=` + action.parent;\n            const children = RequestsManager(requestName.GET_CHILDREN, url);\n            \n            if (children.errors) {\n                return state;\n            }\n\n            explorer.addChildren(action.parent, children);\n            return {\n                rootNode: explorer.getRoot()\n            }\n        }\n        case toggleChildren(0).type: {\n            const explorer = new NodeExplorer(NodeExplorer.clone(state.rootNode));\n            explorer.toggleChildren(action.parent);            \n            return {\n                rootNode: explorer.getRoot()\n            } \n        }  \n        default:\n            return state\n    }\n}\n\n","\nexport default (state = {}, action) => {\n    switch (action.type) {        \n        default:\n            return {\n                matrixWidth: 6\n            }\n    }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\nconst middleWare = [\n    thunk, \n    createLogger()\n];\n\nexport default function configureStore() {\n    return createStore(\n        rootReducer,\n        applyMiddleware(...middleWare)\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/store.js';\nimport setSourcesAction from './actions/setSourcesAction';\n\nconst paths = {\n    sourceUrl: document.getElementById('root').getAttribute('data-source'),\n    detailsUrl: document.getElementById('root').getAttribute('data-details')\n};\n\nconst store = configureStore();\n\nstore.dispatch(setSourcesAction(paths));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}