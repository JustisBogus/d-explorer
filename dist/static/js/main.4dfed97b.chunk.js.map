{"version":3,"sources":["actions/loadChildrenAction.js","actions/toggleChildrenAction.js","actions/Modal/openModalAction.js","actions/setFocus.js","utils/RequestsManager.js","components/Node/index.jsx","actions/Loading/setLoadingAction.js","actions/Loading/setLoadedAction.js","components/EmptyNode/index.jsx","components/Column/index.jsx","actions/loadRootNodeAction.js","utils/NodeExplorer.js","actions/addLevelWidth.js","components/Spinner/index.jsx","components/NodeMatrix/__Components/Modal/index.jsx","actions/Modal/closeModalAction.js","components/NodeMatrix/index.jsx","App.js","serviceWorker.js","reducers/modalReducer.js","actions/setSourcesAction.js","reducers/variablesReducer.js","reducers/index.js","reducers/nodeReducer.js","reducers/matrixReducer.js","store/store.js","index.js"],"names":["loadChildrenAction","parent","data","type","toggleChildrenAction","Modal_openModalAction","content","actions_setFocus","id","RequestsManager","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","requestType","url","response","wrap","_context","prev","next","t0","requestName","GET_ROOT","GET_CHILDREN","axios","get","sent","abrupt","errors","stop","_x","_x2","apply","this","arguments","Node","_React$PureComponent","_getPrototypeOf2","_this","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","concat","onOpenModal","props","openModalAction","enrolleeId","handleClick","nodeId","_this$props","onLoad","showChildren","sourceUrl","numberOfChildren","setLoading","setLoaded","children","childrenResult","setFocus","inherits","createClass","key","value","_this2","_this$props2","title","focusNode","classList","push","react_default","createElement","renderprops","native","items","from","opacity","marginLeft","enter","leave","show","div","style","className","join","onClick","number","to","config","duration","toFixed","React","PureComponent","nodeProps","PropTypes","string","isRequired","bool","arrayOf","shape","func","defaultProps","connect","state","variables","dispatch","toggleChildren","loadChildren","loading","EmptyNode","symbol","viewBox","preserveAspectRatio","width","height","x1","y1","x2","y2","Column","nodes","map","n","i","isEmpty","EmptyNode_EmptyNode","assign","components_Node","loadRootNodeAction","root","objectSpread","NodeExplorer","findInTree","node","toConsumableArray","JSON","parse","stringify","bottom","levels","index","newLevel","reduce","set","forEach","child","parentNode","amount","sum","getOpenedChildrenWidth","reducers","needle","actions_addLevelWidth","levelWidth","Spinner","ModalElement","onCloseModal","closeModal","open","detailsUrl","index_es","onClose","src","modal","NodeMatrix","handleResize","e","windowSize","window","innerWidth","Number","addLevelWidth","_componentDidMount","didMount","_root","addEventListener","maxColumnSize","getLevels","clone","balancedLevels","topOffset","j","paddingAmount","offset","topPadding","generateEmptyNodes","y","bottomOffset","bottomPadding","nodeLeft","empty","lastNode","reducedBalancedLevels","reverse","splice","end","cols","level","Column_Column","Modal","components_Spinner","rootNode","matrix","matrixWidth","loadRoot","App","components_NodeMatrix","Boolean","location","hostname","match","defaultState","setSourcesAction","visibleIndex","combineReducers","undefined","action","explorer","addChildren","getRoot","console","log","process","middleWare","thunk","paths","document","getElementById","getAttribute","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4bAAeA,EAAA,SAACC,EAAQC,GAAT,MAAmB,CAC9BC,KAAM,sBACNF,SACAC,SCHWE,EAAA,SAACH,GAAD,MAAa,CACxBE,KAAM,wBACNF,WCFWI,EAAA,SAACC,GAAD,MAAc,CACzBH,KAAM,aACND,KAAMI,ICFKC,EAAA,SAACC,GAAD,MAAS,CACpBL,KAAM,YACNK,gCCAJC,EAAA,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAe,SAAAC,EAAOC,EAAaC,GAApB,IAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACPJ,EAAW,GADJE,EAAAG,GAGHP,EAHGI,EAAAE,KAAAF,EAAAG,KAIFC,EAAYC,SAJV,EAAAL,EAAAG,KAOFC,EAAYE,aAPV,yBAAAN,EAAAE,KAAA,EAKcK,IAAMC,IAAIX,GALxB,cAKHC,EALGE,EAAAS,KAAAT,EAAAU,OAAA,0BAAAV,EAAAE,KAAA,GAQcK,IAAMC,IAAIX,GARxB,eAQHC,EARGE,EAAAS,KAAAT,EAAAU,OAAA,2BAAAV,EAAAU,OAAA,SAWI,CACHC,OAAQ,CAAC,uBAZV,eAAAX,EAAAU,OAAA,SAgBJZ,EAASjB,MAhBL,yBAAAmB,EAAAY,SAAAjB,MAAf,gBAAAkB,EAAAC,GAAA,OAAAzB,EAAA0B,MAAAC,KAAAC,YAAA,GAmBab,EAAc,CACvBE,aAAc,eACdD,SAAU,YCHDa,SAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAA/B,OAAAgC,EAAA,EAAAhC,CAAA0B,KAAAE,GAAA,QAAAK,EAAAN,UAAAO,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAV,UAAAU,GAAA,OAAAN,EAAA/B,OAAAsC,EAAA,EAAAtC,CAAA0B,MAAAI,EAAA9B,OAAAuC,EAAA,EAAAvC,CAAA4B,IAAAY,KAAAf,MAAAK,EAAA,CAAAJ,MAAAe,OAAAN,MACIO,YAAc,WACVX,EAAKY,MAAMC,gBAAgB,CAACC,WAAYd,EAAKY,MAAM9C,MAF3DkC,EAKIe,YALJ,eAAA/C,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAKkB,SAAAC,EAAO0C,GAAP,IAAAC,EAAAnD,EAAAoD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAjD,EAAA,OAAAL,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAoC,EAINjB,EAAKY,MAFL9C,EAFMmD,EAENnD,GAAIoD,EAFED,EAEFC,OAAQC,EAFNF,EAEME,aAAcC,EAFpBH,EAEoBG,UAAWC,EAF/BJ,EAE+BI,iBACrCC,EAHML,EAGNK,WAAYC,EAHNN,EAGMM,UAAWC,EAHjBP,EAGiBO,WAGvBH,EAAmB,GANb,CAAA1C,EAAAE,KAAA,YAONyC,IACIG,EAAiB,GAEG,IAApBD,EAASrB,OAVP,CAAAxB,EAAAE,KAAA,eAWIL,EAAM4C,EAAS,OAAYtD,EAX/Ba,EAAAE,KAAA,EAYqBd,EAAgBgB,EAAYE,aAAcT,GAZ/D,OAYFiD,EAZE9C,EAAAS,KAAA,OAeDqC,EAAenC,QAChB4B,EAAOpD,EAAIqD,EAAcM,GAG7BF,IAnBM,QAsBVvB,EAAKY,MAAMc,SAASV,GAtBV,yBAAArC,EAAAY,SAAAjB,MALlB,gBAAAkB,GAAA,OAAAxB,EAAA0B,MAAAC,KAAAC,YAAA,GAAAI,EAAA,OAAA/B,OAAA0D,EAAA,EAAA1D,CAAA4B,EAAAC,GAAA7B,OAAA2D,EAAA,EAAA3D,CAAA4B,EAAA,EAAAgC,IAAA,SAAAC,MAAA,WA+Ba,IAAAC,EAAApC,KAAAqC,EACsDrC,KAAKiB,MAAxDqB,EADHD,EACGC,MAAOZ,EADVW,EACUX,iBAAkBvD,EAD5BkE,EAC4BlE,GAAIoE,EADhCF,EACgCE,UAAW3E,EAD3CyE,EAC2CzE,OAC1C4E,EAAY,CAAC,mBAcnB,OAZyB,IAArBd,GAA0BvD,IAAOoE,GACjCC,EAAUC,KAAK,YAGf7E,GAAU2E,GACVC,EAAUC,KAAK,SAGftE,IAAOoE,GACPC,EAAUC,KAAK,YAIfC,EAAAjE,EAAAkE,cAACC,EAAA,WAAD,CACIC,QAAM,EACNC,OAAO,EACPC,KAAM,CAAEC,QAAS,EAAGC,YAAa,KACjCC,MAAO,CAAEF,QAAS,EAAGC,WAAY,GACjCE,MAAO,CAAEH,QAAS,EAAGC,YAAa,MAEjC,SAAAG,GAAI,OAAIA,GAAS,SAAAnC,GAAK,OACnByB,EAAAjE,EAAAkE,cAACC,EAAA,SAASS,IAAV,CAAcC,MAAOrC,GACjByB,EAAAjE,EAAAkE,cAAA,OAAKY,UAAWf,EAAUgB,KAAK,MAC3Bd,EAAAjE,EAAAkE,cAAA,OAAKc,QAAS,kBAAMrB,EAAKhB,YAAYjD,IAAKoF,UAAU,eAChDb,EAAAjE,EAAAkE,cAAA,YAAOL,GACHI,EAAAjE,EAAAkE,cAACC,EAAA,OAAD,CACIG,KAAM,CAAEW,OAAQ,GAChBC,GAAI,CAAED,OAAQhC,GACdkC,OAAQ,CAAEC,SAAU,MAEvB,SAAA5C,GAAK,OACFyB,EAAAjE,EAAAkE,cAAA,OAAKW,MAAOrC,GACNA,EAAMyC,OAAOI,cAK/BpB,EAAAjE,EAAAkE,cAAA,OAAKY,UAAU,6BAA6BE,QAASrB,EAAKpB,aACtD0B,EAAAjE,EAAAkE,cAAA,KAAGY,UAAU,kCAzE7CrD,EAAA,CAA0B6D,IAAMC,gBAoFnBC,EAAY,CACrB9F,GAAI+F,IAAUC,OAAOC,WACrBxG,OAAQsG,IAAUC,OAAOC,WACzB9B,MAAO4B,IAAUC,OAAOC,WACxB5C,aAAc0C,IAAUG,KACxB3C,iBAAkBwC,IAAUR,OAAOU,WACnCvC,SAAUqC,IAAUI,QAAQJ,IAAUK,MAAM,CACxCpG,GAAI+F,IAAUC,OAAOC,WACrB9B,MAAO4B,IAAUC,OAAOC,WACxB1C,iBAAkBwC,IAAUR,OAAOU,cAEvC3C,UAAWyC,IAAUC,OACrBxC,WAAYuC,IAAUM,KAAKJ,WAC3BxC,UAAWsC,IAAUM,KAAKJ,YAE9BH,EAAUpC,SAAWqC,IAAUI,QAAQJ,IAAUK,MAAMN,GAAWG,YAIlElE,EAAKuE,aAAe,CAChBjD,cAAc,EACdK,SAAU,IAGC6C,kBACX,SAAAC,GAAK,MAAK,CACNlD,UAAWkD,EAAMC,UAAUnD,UAC3Bc,UAAWoC,EAAMC,UAAUrC,YAE/B,SAAAsC,GAAQ,MAAK,CACTtD,OAAQ,SAACpD,EAAIiF,EAAMvB,GACXuB,EACAyB,EAASC,EAAe3G,KAExB0G,EAASE,EAAa5G,EAAI0D,IAC1BgD,EAASC,EAAe3G,MAGhCwD,WAAY,WAAQkD,EC9IN,CAClB/G,KAAM,cACND,KAAM,CACFmH,SAAS,MD4ITpD,UAAW,WAAQiD,EE/IL,CAClB/G,KAAM,kBACND,KAAM,CACFmH,SAAS,MF6IT9D,gBAAiB,SAACC,GAAD,OAAgB0D,EAAS3D,EAAgBC,KAC1DY,SAAU,SAAC5D,GAAS0G,EAAS9C,EAAS5D,OAjB/BuG,CAmBbxE,GG9ImB+E,0LACR,IAEDC,EAAS,GACb,OAFiBlF,KAAKiB,MAAdnD,MAGJ,IAAK,QACDoH,EAAS,IACT,MACJ,IAAK,OACDA,EACIxC,EAAAjE,EAAAkE,cAACC,EAAA,OAAD,CACIG,KAAM,CAAEC,QAAS,GACjBW,GAAI,CAAEX,QAAS,GACfY,OAAQ,CAAEC,SAAU,MAElB,SAAA5C,GAAK,OACHyB,EAAAjE,EAAAkE,cAAA,OAAKW,MAAOrC,GACRyB,EAAAjE,EAAAkE,cAAA,OAAKY,UAAU,2BACXb,EAAAjE,EAAAkE,cAAA,OAAKwC,QAAS,gBAAiBC,oBAAoB,gBAAgBC,MAAM,OAAOC,OAAO,QACnF5C,EAAAjE,EAAAkE,cAAA,QAAM4C,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,OAAOnC,UAAU,kBAOvE,MACJ,IAAK,OACD2B,EACIxC,EAAAjE,EAAAkE,cAACC,EAAA,OAAD,CACIG,KAAM,CAAEC,QAAS,GACjBW,GAAI,CAAEX,QAAS,GACfY,OAAQ,CAAEC,SAAU,MAElB,SAAA5C,GAAK,OACHyB,EAAAjE,EAAAkE,cAAA,OAAKW,MAAOrC,GACRyB,EAAAjE,EAAAkE,cAAA,OAAKY,UAAU,2BACXb,EAAAjE,EAAAkE,cAAA,OAAKwC,QAAS,gBAAiBC,oBAAoB,gBAAgBC,MAAM,OAAOC,OAAO,QACnF5C,EAAAjE,EAAAkE,cAAA,QAAM4C,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,OAAOnC,UAAU,aAC/Cb,EAAAjE,EAAAkE,cAAA,QAAM4C,GAAG,IAAIC,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMnC,UAAU,kBAO1E,MACJ,IAAK,YACD2B,EACIxC,EAAAjE,EAAAkE,cAACC,EAAA,OAAD,CACIG,KAAM,CAAEC,QAAS,GACjBW,GAAI,CAAEX,QAAS,GACfY,OAAQ,CAAEC,SAAU,MAElB,SAAA5C,GAAK,OACHyB,EAAAjE,EAAAkE,cAAA,OAAKW,MAAOrC,GACRyB,EAAAjE,EAAAkE,cAAA,OAAKY,UAAU,2BACXb,EAAAjE,EAAAkE,cAAA,OAAKwC,QAAS,gBAAiBC,oBAAoB,gBAAgBC,MAAM,OAAOC,OAAO,QACnF5C,EAAAjE,EAAAkE,cAAA,QAAM4C,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MAAMnC,UAAU,aAC7Cb,EAAAjE,EAAAkE,cAAA,QAAM4C,GAAG,IAAIC,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMnC,UAAU,kBAO3E,MACJ,QACI2B,EAAS,IAIjB,OACIxC,EAAAjE,EAAAkE,cAAA,OAAKY,UAAU,wBACV2B,UA1EsBnB,IAAMC,gBCCxB2B,0LACT,IAEE1H,EADY+B,KAAKiB,MAAf2E,MACcC,IAAK,SAACC,EAAGC,GAC3B,OAAID,EAAEE,QACMtD,EAAAjE,EAAAkE,cAACsD,EAAD3H,OAAA4H,OAAA,CAAWhE,IAAK6D,GAAOD,IAE3BpD,EAAAjE,EAAAkE,cAACwD,EAAD7H,OAAA4H,OAAA,CAAMhE,IAAK6D,GAAOD,MAE9B,OACIpD,EAAAjE,EAAAkE,cAAA,OAAKY,UAAU,qBAAqBtF,UAVZ8F,IAAMC,uBCN3BoC,EAAA,SAACC,GAAD,MAAW,CACtBvI,KAAM,iBACND,KAAKS,OAAAgI,EAAA,EAAAhI,CAAA,GAAK+H,KCFOE,aACjB,SAAAA,EAAYF,GAAM/H,OAAAgC,EAAA,EAAAhC,CAAA0B,KAAAuG,GACdvG,KAAKqG,KAAOA,uDAGPlI,GAEL,OAAOoI,EAAaC,WAAWxG,KAAKqG,KAAMlI,uCAGlCP,EAAQiE,GAChB,IAAM4E,EAAOF,EAAaC,WAAWxG,KAAKqG,KAAMzI,GAE3C6I,EAAK5E,WACN4E,EAAK5E,SAAW,IAGpB4E,EAAK5E,SAAL,GAAAd,OAAAzC,OAAAoI,EAAA,EAAApI,CAAoBmI,EAAK5E,UAAzBvD,OAAAoI,EAAA,EAAApI,CAAsCuD,2CAG3B1D,GACX,IAAMsI,EAAOF,EAAaC,WAAWxG,KAAKqG,KAAMlI,GAChD,OAAOsI,EAAKjF,cAAgBiF,EAAKjF,+CAIjC,OAAOxB,KAAKqG,qCAGHA,GACT,OAAOM,KAAKC,MAAMD,KAAKE,UAAUR,sCAGpBI,GAKb,IAJA,IAAIK,GAAS,EACTC,EAAS,CAAE,CAAC,CAACN,KACbO,EAAQ,GAELF,GAAO,CACV,IAEIG,EAFYF,EAAOC,GAAOE,OAAO,SAACtB,EAAOuB,GAAR,SAAApG,OAAAzC,OAAAoI,EAAA,EAAApI,CAAoBsH,GAApBtH,OAAAoI,EAAA,EAAApI,CAA8B6I,KAAM,IAEhDD,OAAO,SAACrF,EAAU4E,GASvC,OARKA,EAAK5E,WACN4E,EAAK5E,SAAW,IAGpB4E,EAAK5E,SAASuF,QAAQ,SAAAC,GAClBA,EAAMC,WAAab,IAGhBA,EAAK5E,SAASrB,QAAUiG,EAAKjF,aAA7B,GAAAT,OAAAzC,OAAAoI,EAAA,EAAApI,CAAgDuD,GAAhD,CAA0D4E,EAAK5E,WAAYA,GACnF,IAECoF,EAASzG,OAAS,EAClBuG,IAASC,GAASC,EAElBH,GAAS,EAGjB,OAAOC,6CAGejJ,EAAMyJ,GAE5B,IADA,IAAM3B,EAAQ,GACLG,EAAI,EAAGA,EAAIwB,EAAQxB,IACxBH,EAAMnD,KAAK,CAACuD,SAAS,EAAMlI,SAE/B,OAAO8H,iDAGmBa,GAC1B,OAAKA,EAAKjF,cAAyC,IAAzBiF,EAAK5E,SAASrB,OAIjCiG,EAAK5E,SAASrB,OAASiG,EAAK5E,SAASqF,OAAO,SAACM,EAAKH,GAAN,OAAiBd,EAAakB,uBAAuBJ,GAASG,GAAM,GAH5G,sCAMI5B,GACfA,EAAM8B,SAAS,SAAC7F,EAAU4E,GAAX,SAAA1F,OAAAzC,OAAAoI,EAAA,EAAApI,CAAwBuD,GAAxBvD,OAAAoI,EAAA,EAAApI,CAAqCmI,EAAK5E,gDAI3C4E,EAAMtI,GACpB,GAAIsI,EAAKtI,KAAOA,EACZ,OAAOsI,EAGNA,EAAK5E,WACN4E,EAAK5E,SAAW,IAGpB,IAAI,IAAIkE,EAAI,EAAGA,EAAIU,EAAK5E,SAASrB,OAAQuF,IAAI,CACzC,IAAM4B,EAASpB,EAAaC,WAAWC,EAAK5E,SAASkE,GAAI5H,GAEzD,GAAIwJ,EACA,OAAOA,EAGf,OAAO,cCnGAC,EAAA,SAACC,GAAD,MAAiB,CAC5B/J,KAAM,kBACN+J,eCQWC,SANC,kBACZpF,EAAAjE,EAAAkE,cAAA,OAAKY,UAAU,sBACXb,EAAAjE,EAAAkE,cAAA,OAAKY,UAAU,6BCEVwE,SAAb,SAAA5H,GAAA,SAAA4H,IAAA,IAAA3H,EAAAC,EAAA/B,OAAAgC,EAAA,EAAAhC,CAAA0B,KAAA+H,GAAA,QAAAxH,EAAAN,UAAAO,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAV,UAAAU,GAAA,OAAAN,EAAA/B,OAAAsC,EAAA,EAAAtC,CAAA0B,MAAAI,EAAA9B,OAAAuC,EAAA,EAAAvC,CAAAyJ,IAAAjH,KAAAf,MAAAK,EAAA,CAAAJ,MAAAe,OAAAN,MACIuH,aAAe,WACX3H,EAAKY,MAAMgH,cAFnB5H,EAAA,OAAA/B,OAAA0D,EAAA,EAAA1D,CAAAyJ,EAAA5H,GAAA7B,OAAA2D,EAAA,EAAA3D,CAAAyJ,EAAA,EAAA7F,IAAA,SAAAC,MAAA,WAKa,IAAAb,EAGDtB,KAAKiB,MADLiH,EAFC5G,EAED4G,KAAMC,EAFL7G,EAEK6G,WAAYhK,EAFjBmD,EAEiBnD,GAGtB,OACIuE,EAAAjE,EAAAkE,cAACyF,EAAA,EAAD,CACIF,KAAMA,EACNG,QAASrI,KAAKgI,cAEdtF,EAAAjE,EAAAkE,cAAA,OAAKY,UAAU,iCACXb,EAAAjE,EAAAkE,cAAA,UACIY,UAAU,uBACV+E,IAAKH,EAAa,mBAAqBhK,UAlB/D4J,EAAA,CAAkChE,IAAMC,gBA0BzBU,cACX,SAAAC,GAAK,MAAK,CACNuD,KAAMvD,EAAM4D,MAAML,KAClBC,WAAYxD,EAAMC,UAAUuD,WAC5BhK,GAAIwG,EAAM4D,MAAMtK,QAAQkD,aAE5B,SAAA0D,GAAQ,MAAK,CACToD,WAAY,WAAQpD,ECzCN,CAClB/G,KAAM,cACND,KAAM,UDgCK6G,CASbqD,GE1BWS,SAAb,SAAArI,GAAA,SAAAqI,IAAA,IAAApI,EAAAC,EAAA/B,OAAAgC,EAAA,EAAAhC,CAAA0B,KAAAwI,GAAA,QAAAjI,EAAAN,UAAAO,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAV,UAAAU,GAAA,OAAAN,EAAA/B,OAAAsC,EAAA,EAAAtC,CAAA0B,MAAAI,EAAA9B,OAAAuC,EAAA,EAAAvC,CAAAkK,IAAA1H,KAAAf,MAAAK,EAAA,CAAAJ,MAAAe,OAAAN,MAmBIgI,aAAe,SAACC,GACZ,IAAMC,EAAaC,OAAOC,WAEpBhB,EAAaiB,QADCH,EAAa,KACO7E,QAAQ,IAChDzD,EAAKY,MAAM8H,cAAclB,IAvBjCxH,EAAA,OAAA/B,OAAA0D,EAAA,EAAA1D,CAAAkK,EAAArI,GAAA7B,OAAA2D,EAAA,EAAA3D,CAAAkK,EAAA,EAAAtG,IAAA,oBAAAC,MAAA,eAAA6G,EAAA1K,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAA2C,EAAA+E,EAAA4C,EAAAxH,EAAAE,EAAAC,EAAAsH,EAAA,OAAA1K,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAoC,EAIYtB,KAAKiB,MADLoF,EAHZ/E,EAGY+E,KAAM4C,EAHlB3H,EAGkB2H,SAAUxH,EAH5BH,EAG4BG,UAAWE,EAHvCL,EAGuCK,WAAYC,EAHnDN,EAGmDM,UAGtCyE,EANb,CAAArH,EAAAE,KAAA,eAOYyC,IAPZ3C,EAAAE,KAAA,EAQ+Bd,EAAgBgB,EAAYC,SAAUoC,GARrE,QAQkB4E,EARlBrH,EAAAS,MASsBE,QACNsJ,EAAS5C,GAEbzE,IAZZ,OAeQ5B,KAAKyI,eACLG,OAAOO,iBAAiB,SAAUnJ,KAAKyI,cAhB/C,yBAAAzJ,EAAAY,SAAAjB,EAAAqB,SAAA,yBAAAgJ,EAAAjJ,MAAAC,KAAAC,YAAA,KAAAiC,IAAA,SAAAC,MAAA,WA+BQ,IALI,IAAAE,EACqCrC,KAAKiB,MAAtCoF,EADJhE,EACIgE,KAAM+C,EADV/G,EACU+G,cAAepE,EADzB3C,EACyB2C,QACvB+B,EAASV,EAAOE,EAAa8C,UAAU9C,EAAa+C,MAAMjD,IAAS,GACnEkD,EAAiB,GAEdxD,EAAI,EAAGA,EAAIgB,EAAOvG,OAAQuF,IAAK,CACpCwD,EAAexD,GAAK,GAEpB,IADA,IAAIyD,EAAY,EACPC,EAAI,EAAGA,EAAI1C,EAAOhB,GAAGvF,OAAQiJ,IAAK,CACvC,GAAI1C,EAAOhB,GAAG0D,GAAGjJ,OAAS,EAAE,CACxB,IACMkJ,GADe3C,EAAOhB,GAAG0D,GAAG,GAAGnC,WAAaP,EAAOhB,GAAG0D,GAAG,GAAGnC,WAAWqC,OAAS,GACjDJ,EAAexD,GAAGvF,OACjDoJ,EAAarD,EAAasD,mBAAmB,QAASH,GAE5DH,EAAexD,GAAf,GAAAhF,OAAAzC,OAAAoI,EAAA,EAAApI,CAAwBiL,EAAexD,IAAvCzH,OAAAoI,EAAA,EAAApI,CAA8CsL,IAC9CJ,GAAaE,EAGjB,IAAK,IAAII,EAAI,EAAGA,EAAI/C,EAAOhB,GAAG0D,GAAGjJ,OAAQsJ,IAAK,CAC1C,IAAMrD,EAAOM,EAAOhB,GAAG0D,GAAGK,GAC1BrD,EAAKkD,SAAWH,EAChB,IAAIO,EAAexD,EAAakB,uBAAuBhB,GACvD+C,GAAaO,EACb,IAAIC,EAEJA,EAAgBzD,EAAasD,mBAAmB,OAAQE,GACxDR,EAAexD,GAAf,GAAAhF,OAAAzC,OAAAoI,EAAA,EAAApI,CAAwBiL,EAAexD,IAAvC,CAA2CU,GAA3CnI,OAAAoI,EAAA,EAAApI,CAAoD0L,MAMhE,IAAK,IAAIjE,EAAIwD,EAAe/I,OAAS,EAAGuF,EAAI,EAAGA,IAC3C,IAAK,IAAI0D,EAAI,EAAGA,EAAIF,EAAexD,GAAGvF,OAAQiJ,IAAK,CAC/C,IAAMQ,EAAWV,EAAexD,EAAI,GAAG0D,IAC1BF,EAAexD,GAAG0D,GAErBzD,SAAWiE,GAAYA,EAASnM,OACtCmM,EAASnM,KAAO,QAK5B,IAAK,IAAIiI,EAAIwD,EAAe/I,OAAS,EAAGuF,GAAK,EAAGA,IAG5C,IAFA,IAAImE,GAAQ,EACRC,GAAW,EACNV,EAAIF,EAAexD,GAAGvF,OAAQ,EAAGiJ,EAAI,EAAGA,IAAK,CAClD,IAAMhD,EAAO8C,EAAexD,GAAG0D,GAC/B,GAAIhD,GAAQA,EAAK3I,KACb,OAAQ2I,EAAK3I,MACT,IAAK,OACGoM,IACAzD,EAAK3I,KAAO,SAEhB,MACJ,IAAK,QACGoM,GAASC,KACTD,GAAQ,EACRC,GAAW,EACX1D,EAAK3I,KAAO,kBAOxBqM,GAAW,EACXD,GAAQ,EASpB,IAJA,IAAME,EAAwBb,EAAec,UAAUC,OAAO,EAAGlB,GAAeiB,UAE5EH,EAAQ,EACRK,GAAM,EACHA,GAECH,EAAsB,IAClBA,EAAsB,GAAGF,GAAOpM,MACS,UAAzCsM,EAAsB,GAAGF,GAAOpM,OAElCoM,EAEFK,GAAM,EAId,IAAMC,EAAOJ,EAAsBvE,IAAI,SAAC4E,EAAO1E,GAAR,OAAerD,EAAAjE,EAAAkE,cAAC+H,EAAD,CAAQxI,IAAK6D,EAAGH,MAAO6E,EAAMH,OAAOJ,OAE1F,OACIxH,EAAAjE,EAAAkE,cAAA,OAAKY,UAAU,yBACViH,EACD9H,EAAAjE,EAAAkE,cAACgI,EAAD,MACE3F,EAAUtC,EAAAjE,EAAAkE,cAACiI,EAAD,MAAc,UAxH1CpC,EAAA,CAAgCzE,IAAMC,gBA8HvBU,cACX,SAAAC,GAAK,MAAK,CACN0B,KAAM1B,EAAMiB,MAAMiF,SAClBxF,MAAOV,EAAMmG,OAAOC,YACpB3B,cAAezE,EAAMC,UAAUwE,cAC/BpE,QAASL,EAAMC,UAAUI,QACzBvD,UAAWkD,EAAMC,UAAUnD,YAE/B,SAAAoD,GAAQ,MAAK,CACToE,SAAW,SAAC5C,GACRxB,EAASmG,EAAS3E,KAEtB1E,WAAY,WACRkD,EV5JU,CAClB/G,KAAM,cACND,KAAM,CACFmH,SAAS,MU2JTpD,UAAW,WACPiD,ET/JU,CAClB/G,KAAM,kBACND,KAAM,CACFmH,SAAS,MS8JT+D,cAAe,SAAClB,GACZhD,EAASkE,EAAclB,OAnBpBnD,CAsBb8D,GC3JayC,MANf,WACE,OACEvI,EAAAjE,EAAAkE,cAACuI,EAAD,CAAY7F,MAAS,KCML8F,QACW,cAA7BvC,OAAOwC,SAASC,UAEe,UAA7BzC,OAAOwC,SAASC,UAEhBzC,OAAOwC,SAASC,SAASC,MACvB,+ECfAC,SAAe,CACjBrD,MAAM,EACNjK,QAAS,CACLkD,WAAY,MCNLqK,EAAA,SAACvN,GAAD,MAAc,CACzBH,KAAM,kBACND,KAAMI,ICIJsN,EAAe,CACjBE,aAAc,EACdrC,cAAe,EACfpE,SAAS,EACTvD,UAAW,GACX0G,WAAY,GACZ5F,UAAW,GCNAmJ,cAAgB,CAC3B9F,MCMW,WAAwC,IAAvCjB,EAAuC1E,UAAAO,OAAA,QAAAmL,IAAA1L,UAAA,GAAAA,UAAA,GAA/B,CAAE4K,SAAU,MAAQe,EAAW3L,UAAAO,OAAA,EAAAP,UAAA,QAAA0L,EACnD,OAAQC,EAAO9N,MACX,KAAKkN,IAAWlN,KAGZ,MAAO,CACH+M,SAASvM,OAAAgI,EAAA,EAAAhI,CAAA,GAAMsN,EAAO/N,OAM9B,KAAKkH,EAAa,GAAGjH,KACjB,IAAM+N,EAAW,IAAItF,EAAaA,EAAa+C,MAAM3E,EAAMkG,WAM3D,OAHAgB,EAASC,YAAYF,EAAOhO,OAAQgO,EAAO/N,MAGpC,CACHgN,SAAUgB,EAASE,WAG3B,KAAKjH,EAAe,GAAGhH,KACnB,IAAM+N,EAAW,IAAItF,EAAaA,EAAa+C,MAAM3E,EAAMkG,WAE3D,OADAgB,EAAS/G,eAAe8G,EAAOhO,QACxB,CACHiN,SAAUgB,EAASE,WAG3B,QACI,OAAOpH,IDpCfmG,OEPW,WAAwB7K,UAAAO,OAAA,QAAAmL,IAAA1L,UAAA,IAAAA,UAAA,GAG3B,OAH2BA,UAAAO,OAAA,EAAAP,UAAA,QAAA0L,GACpB7N,KAEA,CACHiN,YAAa,IFIzBxC,MHCW,WAAkC,IAAjC5D,EAAiC1E,UAAAO,OAAA,QAAAmL,IAAA1L,UAAA,GAAAA,UAAA,GAAzBsL,EAAcK,EAAW3L,UAAAO,OAAA,EAAAP,UAAA,QAAA0L,EAC7C,OAAQC,EAAO9N,MACX,KAAKoD,EAAgByD,GAAO7G,KAEpB,IAAMD,EAAO,CACTqK,MAAM,EACNjK,QAAQK,OAAAgI,EAAA,EAAAhI,CAAA,GACDsN,EAAO/N,OAIlB,OAAOS,OAAAgI,EAAA,EAAAhI,CAAA,GAAIqG,EAAU9G,GAE7B,IJtBE,cI+BM,OAAOS,OAAAgI,EAAA,EAAAhI,CAAA,GAAIqG,EAPE,CACTuD,MAAM,EACNjK,QAAS,CACLkD,WAAY,MAM5B,QACI,OAAOwD,IGzBfC,UDKW,WAAkC,IAAjCD,EAAiC1E,UAAAO,OAAA,QAAAmL,IAAA1L,UAAA,GAAAA,UAAA,GAAzBsL,EAAcK,EAAW3L,UAAAO,OAAA,EAAAP,UAAA,QAAA0L,EAC7C,OAAQC,EAAO9N,MACX,IfhBE,ceoBF,IdpBE,kBcwBF,KAAK0N,EAAiB7G,GAAO7G,KAErB,OAAOQ,OAAAgI,EAAA,EAAAhI,CAAA,GAAIqG,EAAUiH,EAAO/N,MAEpC,KAAKkL,EAAcpE,GAAO7G,KAElB,OAAOQ,OAAAgI,EAAA,EAAAhI,CAAA,GAAIqG,EAAX,CAAkByE,cAAewC,EAAO/D,aAEhD,KAAK9F,EAAS4C,GAAO7G,KAEb,OAAOQ,OAAAgI,EAAA,EAAAhI,CAAA,GAAIqG,EAAX,CAAkBpC,UAAWqJ,EAAOzN,KAE5C,QACI,OAAOwG,MIjCnBqH,QAAQC,IAAIC,cAEZ,IAAMC,EAAa,CACfC,KCCJ,IAAMC,EAAQ,CACV5K,UAAW6K,SAASC,eAAe,gBAAgBC,aAAa,eAChErE,WAAYmE,SAASC,eAAe,gBAAgBC,aAAa,iBAG/DC,EDEKC,YACHC,EACAC,IAAe7M,WAAf,EAAmBoM,ICF3BM,EAAM5H,SAAS2G,EAAiBa,IAEhCQ,IAASC,OACLpK,EAAAjE,EAAAkE,cAACoK,EAAA,EAAD,CAAUN,MAAOA,GACb/J,EAAAjE,EAAAkE,cAACqK,EAAD,OAEJV,SAASC,eAAe,iBR2GtB,kBAAmBU,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4dfed97b.chunk.js","sourcesContent":["export default (parent, data) => ({\n    type: 'LOAD_CHILDREN_NODES',\n    parent,\n    data,\n});","export default (parent) => ({\n    type: 'TOGGLE_CHILDREN_NODES',\n    parent \n});","export default (content) => ({\n    type: 'OPEN_MODAL',\n    data: content\n});","export default (id) => ({\n    type: 'SET_FOCUS',\n    id,\n});","import axios from 'axios';\n\nexport default async (requestType, url) => {\n    let response = {};\n\n    switch (requestType) {\n        case requestName.GET_ROOT:\n            response = await axios.get(url);\n            break;\n        case requestName.GET_CHILDREN:\n            response = await axios.get(url);\n            break;\n        default:\n            return {\n                errors: [\"Request not found\"]\n            }\n        }\n    \n    return response.data;\n}\n\nexport const requestName = {\n    GET_CHILDREN: 'get_children',\n    GET_ROOT: 'get_root'\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport setLoadingAction from '../../actions/Loading/setLoadingAction';\nimport setLoadedAction from '../../actions/Loading/setLoadedAction';\nimport loadChildren from '../../actions/loadChildrenAction';\nimport toggleChildren from '../../actions/toggleChildrenAction';\nimport openModalAction from '../../actions/Modal/openModalAction';\nimport setFocus from '../../actions/setFocus';\nimport { Transition, animated, Spring } from 'react-spring/renderprops';\nimport RequestsManager, { requestName } from '../../utils/RequestsManager';\n\nimport './styles.css';\n\n\n//const animation = useSpring({opacity: 1, from: {opacity: 0}});\n\n//const AnimatedDonut = animated(animation);\n\nexport class Node extends React.PureComponent {\n    onOpenModal = () => {\n        this.props.openModalAction({enrolleeId: this.props.id})\n    };\n\n    handleClick = async (nodeId) => {\n        const {\n            id, onLoad, showChildren, sourceUrl, numberOfChildren,\n            setLoading, setLoaded, children,\n        } = this.props;\n        \n        if (numberOfChildren > 0) {\n            setLoading();\n            let childrenResult = [];\n\n            if (children.length === 0) {\n                const url = sourceUrl + `?id=` + id;\n                childrenResult = await RequestsManager(requestName.GET_CHILDREN, url);\n            }\n            \n            if (!childrenResult.errors) {\n                onLoad(id, showChildren, childrenResult);\n            }\n\n            setLoaded();\n        }\n\n        this.props.setFocus(nodeId);\n\n    }\n\n    render() {\n        const { title, numberOfChildren, id, focusNode, parent } = this.props;\n        const classList = ['Node__Container'];\n\n        if (numberOfChildren === 0 && id !== focusNode) {\n            classList.push('disabled');\n        }\n        \n        if (parent == focusNode) {\n            classList.push('focus');\n        }\n\n        if (id === focusNode) {\n            classList.push('selected');\n        }\n\n        return (\n            <Transition\n                native\n                items={true}\n                from={{ opacity: 0, marginLeft: -500 }}\n                enter={{ opacity: 1, marginLeft: 0 }}\n                leave={{ opacity: 0, marginLeft: -500 }}\n            >\n                {show => show && (props => (\n                    <animated.div style={props}>\n                        <div className={classList.join(' ')}>\n                            <div onClick={() => this.handleClick(id)} className=\"Node__Title\">\n                                <span>{title}</span>\n                                    <Spring\n                                        from={{ number: 0 }}\n                                        to={{ number: numberOfChildren }}\n                                        config={{ duration: 1000 }}\n                                    >\n                                    {props => (\n                                        <div style={props}>\n                                             {props.number.toFixed()}\n                                        </div>\n                                    )} \n                                    </Spring>\n                            </div>\n                            <div className=\"Node__ModalButtonContainer\" onClick={this.onOpenModal}>\n                                <i className=\"fa fa-external-link\"></i>\n                            </div>\n                        </div> \n                    </animated.div>\n                ))}\n            </Transition>     \n        );\n    }\n}\n\n\nexport const nodeProps = {\n    id: PropTypes.string.isRequired,\n    parent: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    showChildren: PropTypes.bool,\n    numberOfChildren: PropTypes.number.isRequired,\n    children: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        numberOfChildren: PropTypes.number.isRequired,\n    })),\n    sourceUrl: PropTypes.string,\n    setLoading: PropTypes.func.isRequired,\n    setLoaded: PropTypes.func.isRequired\n};\nnodeProps.children = PropTypes.arrayOf(PropTypes.shape(nodeProps).isRequired);\n\nNode.propTypes = nodeProps;\n\nNode.defaultProps = {\n    showChildren: false,\n    children: [],\n}\n\nexport default connect(\n    state => ({\n        sourceUrl: state.variables.sourceUrl,\n        focusNode: state.variables.focusNode,\n    }),\n    dispatch => ({\n        onLoad: (id, show, children) => {\n            if (show) {\n                dispatch(toggleChildren(id));\n            } else {\n                dispatch(loadChildren(id, children));\n                dispatch(toggleChildren(id));\n            }\n        },\n        setLoading: () => { dispatch(setLoadingAction()); },\n        setLoaded: () => { dispatch(setLoadedAction()); },\n        openModalAction: (enrolleeId) => dispatch(openModalAction(enrolleeId)),\n        setFocus: (id) => { dispatch(setFocus(id)); },\n    }),\n)(Node);","export default () => ({\n    type: 'SET_LOADING',\n    data: {\n        loading: true,\n    }\n});","export default () => ({\n    type: 'SET_LOADING_END',\n    data: {\n        loading: false,\n    }\n});","import React from 'react';\nimport { Transition, animated, Spring } from 'react-spring/renderprops';\n\nimport './styles.css';\n\nexport default class EmptyNode extends React.PureComponent {\n    render() {\n        const { type } = this.props;\n        let symbol = \"\";\n        switch (type) {\n            case \"space\":\n                symbol = \" \";\n                break;\n            case \"pipe\":\n                symbol = (\n                    <Spring\n                        from={{ opacity: 0 }}\n                        to={{ opacity: 1 }}\n                        config={{ duration: 1000 }}\n                    >\n                        { props => (\n                            <div style={props}>\n                                <div className=\"EmptyNode__SVGContainer\">\n                                    <svg viewBox={\"0 0 100% 100%\"} preserveAspectRatio=\"xMidYMid meet\" width=\"100%\" height=\"100%\">\n                                        <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" className=\"SVG_Line\" />\n                                    </svg>\n                                </div>\n                            </div>\n                            )}\n                    </Spring>        \n                );\n                break;\n            case \"line\":\n                symbol = (\n                    <Spring\n                        from={{ opacity: 0 }}\n                        to={{ opacity: 1 }}\n                        config={{ duration: 1000 }}\n                    >\n                        { props => (\n                            <div style={props}>\n                                <div className=\"EmptyNode__SVGContainer\" >\n                                    <svg viewBox={\"0 0 100% 100%\"} preserveAspectRatio=\"xMidYMid meet\" width=\"100%\" height=\"100%\">\n                                        <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" className=\"SVG_Line\"/>\n                                        <line x1=\"0\" y1=\"50%\" x2=\"90%\" y2=\"50%\" className=\"SVG_Line\" />\n                                     </svg>\n                                </div>\n                            </div>\n                        )}\n                    </Spring>  \n                );\n                break;\n            case \"last-line\":\n                symbol = (\n                    <Spring\n                        from={{ opacity: 0 }}\n                        to={{ opacity: 1 }}\n                        config={{ duration: 1000 }}\n                    >\n                        { props => (\n                            <div style={props}>\n                                <div className=\"EmptyNode__SVGContainer\" >\n                                    <svg viewBox={\"0 0 100% 100%\"} preserveAspectRatio=\"xMidYMid meet\" width=\"100%\" height=\"100%\">\n                                        <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"50%\" className=\"SVG_Line\" />\n                                         <line x1=\"0\" y1=\"50%\" x2=\"90%\" y2=\"50%\" className=\"SVG_Line\" />\n                                    </svg>\n                                </div>\n                            </div>\n                        )}\n                    </Spring>  \n                );\n                break;\n            default:\n                symbol = \"-\";\n                break;\n        }\n\n        return (\n            <div className=\"EmptyNode__Container\">\n                {symbol}\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Node, { nodeProps } from '../Node';\nimport EmptyNode from '../EmptyNode';\nimport './index.css'\n\nexport default class Column extends React.PureComponent {\n    render(){\n        const { nodes } = this.props;\n        const content = nodes.map( (n, i) => {\n            if (n.isEmpty){\n                return (<EmptyNode key={i} {...n} />);\n            }\n            return (<Node key={i} {...n} />);\n        });\n        return (\n            <div className=\"Column__Container\">{content}</div>\n        );\n    }\n}\n\nColumn.propTypes = {\n    nodes: PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.shape(nodeProps),\n        PropTypes.shape({\n            isEmpty: PropTypes.bool.isRequired,\n            type: PropTypes.string.isRequired\n        }) \n    ])),\n};","export default (root) => ({\n    type: 'LOAD_ROOT_NODE', \n    data: {...root}\n});","export default class NodeExplorer {\n    constructor(root){\n        this.root = root;\n    }\n\n    findNode(id){\n       \n        return NodeExplorer.findInTree(this.root, id);\n    }    \n\n    addChildren(parent, children){\n        const node = NodeExplorer.findInTree(this.root, parent);\n\n        if (!node.children) {\n            node.children = [];\n        }\n\n        node.children = [...node.children, ...children];        \n    }\n\n    toggleChildren(id){\n        const node = NodeExplorer.findInTree(this.root, id);\n        return node.showChildren = !node.showChildren;\n    }\n\n    getRoot(){\n        return this.root;\n    }\n\n    static clone(root){\n        return JSON.parse(JSON.stringify(root));\n    }\n\n    static getLevels(node){\n        let bottom = false;\n        let levels = [ [[node]] ];\n        let index = 0;\n\n        while(!bottom){\n            let lastLevel = levels[index].reduce((nodes, set) => [...nodes, ...set], []);\n            \n            let newLevel = lastLevel.reduce((children, node) => {\n                if (!node.children) {\n                    node.children = [];\n                }\n\n                node.children.forEach(child => {\n                    child.parentNode = node;\n                });\n\n                return node.children.length && node.showChildren ? [...children, node.children] : children;\n            }, []);\n\n            if (newLevel.length > 0){\n                levels[++index] = newLevel;\n            } else {\n                bottom = true;\n            }\n        }\n        return levels;\n    }\n\n    static generateEmptyNodes(type, amount){\n        const nodes = [];\n        for (let i = 0; i < amount; i++){\n            nodes.push({isEmpty: true, type});\n        }\n        return nodes;\n    }\n\n    static getOpenedChildrenWidth(node){\n        if (!node.showChildren || node.children.length === 0){\n            return 0;\n        }\n\n        return node.children.length + node.children.reduce((sum, child) => (NodeExplorer.getOpenedChildrenWidth(child) + sum), 0);\n    }\n\n    static getChildren(nodes){\n        nodes.reducers((children, node) => [...children, ...node.children],  )\n    }\n\n\n    static findInTree(node, id){\n        if (node.id === id){\n            return node;\n        }\n\n        if (!node.children) {\n            node.children = [];\n        }\n\n        for(let i = 0; i < node.children.length; i++){\n            const needle = NodeExplorer.findInTree(node.children[i], id);\n\n            if (needle) {\n                return needle;\n            }\n        }\n        return null;\n    }\n}","export default (levelWidth) => ({\n    type: 'ADD_LEVEL_WIDTH',\n    levelWidth,\n});","import React from 'react';\n\nimport './styles.css';\n\nconst Spinner = () => (\n    <div className=\"Spinner__Container\">\n        <div className=\"lds-dual-ring\"></div>\n    </div>\n);\n\nexport default Spinner;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Modal from \"react-responsive-modal\";\n\nimport './styles.css';\nimport closeModalAction from '../../../../actions/Modal/closeModalAction';\n\nexport class ModalElement extends React.PureComponent {\n    onCloseModal = () => {\n        this.props.closeModal();\n    };\n\n    render() {\n        const {\n            open, detailsUrl, id,\n        } = this.props;\n\n        return (\n            <Modal\n                open={open}\n                onClose={this.onCloseModal}\n            >\n                <div className=\"ModalElement__IframeContainer\">\n                    <iframe\n                        className=\"ModalElement__Iframe\"\n                        src={detailsUrl + '/associate/info/' + id}>\n                    </iframe>\n                </div>\n            </Modal>\n        )\n    }\n}\n\nexport default connect(\n    state => ({\n        open: state.modal.open,\n        detailsUrl: state.variables.detailsUrl,\n        id: state.modal.content.enrolleeId,\n    }),\n    dispatch => ({\n        closeModal: () => { dispatch(closeModalAction())}\n    }),\n)(ModalElement);\n\nModalElement.propTypes = {\n    open: PropTypes.bool.isRequired,    \n    detailsUrl: PropTypes.string,    \n}","export default () => ({\n    type: 'CLOSE_MODAL',\n    data: null\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { nodeProps } from '../Node';\nimport Column from '../Column';\nimport loadRoot from '../../actions/loadRootNodeAction';\nimport NodeExplorer from '../../utils/NodeExplorer';\nimport setLoadingAction from '../../actions/Loading/setLoadingAction';\nimport setLoadedAction from '../../actions/Loading/setLoadedAction';\nimport addLevelWidth from '../../actions/addLevelWidth';\nimport Spinner from '../Spinner';\nimport Modal from './__Components/Modal';\nimport RequestsManager, { requestName } from '../../utils/RequestsManager';\n\nimport './styles.css';\n\nexport class NodeMatrix extends React.PureComponent {\n    async componentDidMount() {\n        const {\n            root, didMount, sourceUrl, setLoading, setLoaded,\n        } = this.props;\n\n        if (!root) {\n            setLoading();\n            const root = await RequestsManager(requestName.GET_ROOT, sourceUrl);\n            if (!root.errors) {\n                didMount(root);\n            }\n            setLoaded();\n        }\n\n        this.handleResize();\n        window.addEventListener('resize', this.handleResize);\n    }\n\n    handleResize = (e) => {\n        const windowSize = window.innerWidth;\n        const windowWidth = windowSize / 200;\n        const levelWidth = Number((windowWidth).toFixed(0));\n        this.props.addLevelWidth(levelWidth);\n    };\n\n    render(){\n        const { root, maxColumnSize, loading } = this.props;\n        const levels = root ? NodeExplorer.getLevels(NodeExplorer.clone(root)) : [];\n        const balancedLevels = [];\n\n        for (let i = 0; i < levels.length; i++) {\n            balancedLevels[i] = [];\n            let topOffset = 0\n            for (let j = 0; j < levels[i].length; j++) {\n                if (levels[i][j].length > 0){\n                    const parentOffset = levels[i][j][0].parentNode ? levels[i][j][0].parentNode.offset : 0;  \n                    const paddingAmount = parentOffset - balancedLevels[i].length;\n                    const topPadding = NodeExplorer.generateEmptyNodes('space', paddingAmount);\n\n                    balancedLevels[i] = [...balancedLevels[i], ...topPadding];\n                    topOffset += paddingAmount;\n                }\n\n                for (let y = 0; y < levels[i][j].length; y++) {\n                    const node = levels[i][j][y];\n                    node.offset = ++topOffset;\n                    let bottomOffset = NodeExplorer.getOpenedChildrenWidth(node);\n                    topOffset += bottomOffset;\n                    let bottomPadding = '';\n                    \n                    bottomPadding = NodeExplorer.generateEmptyNodes('pipe', bottomOffset);\n                    balancedLevels[i] = [...balancedLevels[i], node, ...bottomPadding];\n                }\n                \n            }\n        }\n\n        for (let i = balancedLevels.length - 1; i > 0; i--) {\n            for (let j = 0; j < balancedLevels[i].length; j++) {\n                const nodeLeft = balancedLevels[i - 1][j];\n                const node = balancedLevels[i][j];\n\n                if (!node.isEmpty && nodeLeft && nodeLeft.type) {\n                    nodeLeft.type = 'line';\n                }\n            }\n        }\n\n        for (let i = balancedLevels.length - 1; i >= 0; i--) {\n            let empty = true;\n            let lastNode = true;\n            for (let j = balancedLevels[i].length -1; j > 0; j--) {\n                const node = balancedLevels[i][j];\n                if (node && node.type) {\n                    switch (node.type) {\n                        case \"pipe\":\n                            if (empty) {\n                                node.type = 'space';\n                            }\n                            break;\n                        case \"line\":\n                            if (empty || lastNode) {\n                                empty = false;\n                                lastNode = false;\n                                node.type = 'last-line';\n                            }\n                            break;\n                        default:\n                            break;\n                    }\n                } else {\n                    lastNode = true;\n                    empty = true;\n                }\n            }\n        }\n\n        const reducedBalancedLevels = balancedLevels.reverse().splice(0, maxColumnSize).reverse();\n\n        let empty = 0;\n        let end = true;\n        while (end) {\n            if (\n                reducedBalancedLevels[0]\n                 && reducedBalancedLevels[0][empty].type\n                 && reducedBalancedLevels[0][empty].type === 'space'\n            ) {\n                ++empty;\n            } else {\n                end = false;\n            }\n        }\n\n        const cols = reducedBalancedLevels.map((level, i) => (<Column key={i} nodes={level.splice(empty)} />));\n\n        return (\n            <div className=\"NodeMatrix__Container\">\n                {cols}\n                <Modal />\n                { loading ? <Spinner /> : null }\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        root: state.nodes.rootNode,\n        width: state.matrix.matrixWidth,\n        maxColumnSize: state.variables.maxColumnSize,\n        loading: state.variables.loading,\n        sourceUrl: state.variables.sourceUrl,\n    }),\n    dispatch => ({\n        didMount:  (root) => {\n            dispatch(loadRoot(root));\n        },\n        setLoading: () => {\n            dispatch(setLoadingAction());\n        },\n        setLoaded: () => {\n            dispatch(setLoadedAction());\n        },\n        addLevelWidth: (levelWidth) => {\n            dispatch(addLevelWidth(levelWidth));\n        },\n    }),\n)(NodeMatrix);\n\nNodeMatrix.propTypes = {\n    width: PropTypes.number.isRequired,\n    root: PropTypes.shape(nodeProps),\n    maxColumnSize: PropTypes.number.isRequired,\n    setLoading: PropTypes.func.isRequired,\n    didMount: PropTypes.func.isRequired,\n};","import React from 'react';\nimport './App.css';\nimport NodeMatrix from './components/NodeMatrix'\n\nfunction App() {\n  return (\n    <NodeMatrix width = {6} />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import openModalAction from '../actions/Modal/openModalAction';\nimport closeModalAction from '../actions/Modal/closeModalAction';\n\nconst defaultState = {\n    open: false,\n    content: {\n        enrolleeId: ''\n    }\n}\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {   \n        case openModalAction(state).type:\n            {\n                const data = {\n                    open: true,\n                    content: {\n                        ...action.data\n                    }\n                };\n\n                return {...state, ...data};\n            }            \n        case closeModalAction(state).type:\n            {\n                const data = {\n                    open: false,\n                    content: {\n                        enrolleeId: ''\n                    }\n                };\n\n                return {...state, ...data};\n            }\n        default:\n            return state\n    }\n}\n","export default (content) => ({\n    type: 'SET_SOURCE_URLS',\n    data: content\n});","import setLoadingAction from '../actions/Loading/setLoadingAction';\nimport setLoadedAction from '../actions/Loading/setLoadedAction';\nimport setSourcesAction from '../actions/setSourcesAction';\nimport addLevelWidth from '../actions/addLevelWidth';\nimport setFocus from '../actions/setFocus';\n\nconst defaultState = {\n    visibleIndex: 0,\n    maxColumnSize: 5,\n    loading: false,\n    sourceUrl: '',\n    detailsUrl: '',\n    focusNode: 1,\n}\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case setLoadingAction(state).type:\n            {\n                return {...state, ...action.data};\n            }\n        case setLoadedAction(state).type:\n            {\n                return {...state, ...action.data};\n            }\n        case setSourcesAction(state).type:\n            {\n                return {...state, ...action.data};\n            }\n        case addLevelWidth(state).type:\n            {\n                return {...state, maxColumnSize: action.levelWidth};\n            }\n        case setFocus(state).type:\n            {\n                return {...state, focusNode: action.id};\n            }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport nodes from './nodeReducer';\nimport matrix from './matrixReducer';\nimport modal from './modalReducer';\nimport variables from './variablesReducer';\n\nexport default combineReducers({\n    nodes,\n    matrix,\n    modal,\n    variables,\n});","import loadRoot from '../actions/loadRootNodeAction';\nimport loadChildren from '../actions/loadChildrenAction';\nimport toggleChildren from '../actions/toggleChildrenAction';\nimport NodeExplorer from '../utils/NodeExplorer';\n// import generateNodes from '../utils/NodeGenerator';\n\n// const rootNode = {\n//     id: \"1\",\n//     title: \"Root\",\n//     parent: \"0\",\n//     numberOfChildren: 3,\n// }\n\nexport default (state = { rootNode: null }, action) => {\n    switch (action.type) {\n        case loadRoot().type:\n            // const root = rootNode;\n\n            return {\n                rootNode: { ...action.data }\n            }\n\n            // return {\n            //     rootNode: { ...root }\n            // }\n        case loadChildren(0).type: {\n            const explorer = new NodeExplorer(NodeExplorer.clone(state.rootNode));\n            // const children = generateNodes(3, action.parent);\n\n            explorer.addChildren(action.parent, action.data);\n            // explorer.addChildren(action.parent, children);\n            \n            return {\n                rootNode: explorer.getRoot()\n            }\n        }\n        case toggleChildren(0).type: {\n            const explorer = new NodeExplorer(NodeExplorer.clone(state.rootNode));\n            explorer.toggleChildren(action.parent);            \n            return {\n                rootNode: explorer.getRoot()\n            } \n        }  \n        default:\n            return state\n    }\n}\n\n","\nexport default (state = {}, action) => {\n    switch (action.type) {        \n        default:\n            return {\n                matrixWidth: 6\n            }\n    }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\nconsole.log(process.env.NODE_ENV);\n\nconst middleWare = [\n    thunk\n];\n\nif (process.env.NODE_ENV === 'development') {\n    middleWare.push(createLogger())\n}\n\nexport default function configureStore() {\n    return createStore(\n        rootReducer,\n        applyMiddleware(...middleWare)\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/store.js';\nimport setSourcesAction from './actions/setSourcesAction';\n\nconst paths = {\n    sourceUrl: document.getElementById('rootExplorer').getAttribute('data-source'),\n    detailsUrl: document.getElementById('rootExplorer').getAttribute('data-details')\n};\n\nconst store = configureStore();\n\nstore.dispatch(setSourcesAction(paths));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('rootExplorer')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}