{"version":3,"sources":["actions/loadChildrenAction.js","actions/toggleChildrenAction.js","actions/Modal/openModalAction.js","utils/RequestsManager.js","components/Node/index.jsx","actions/Loading/setLoadingAction.js","actions/Loading/setLoadedAction.js","components/EmptyNode/index.jsx","components/Column/index.jsx","actions/loadRootNodeAction.js","utils/NodeExplorer.js","components/Spinner/index.jsx","components/NodeMatrix/__Components/Modal/index.jsx","actions/Modal/closeModalAction.js","components/NodeMatrix/index.jsx","App.js","serviceWorker.js","reducers/modalReducer.js","actions/setSourcesAction.js","reducers/variablesReducer.js","reducers/index.js","reducers/nodeReducer.js","reducers/matrixReducer.js","store/store.js","index.js"],"names":["loadChildrenAction","parent","data","type","toggleChildrenAction","Modal_openModalAction","content","RequestsManager","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","requestType","url","response","wrap","_context","prev","next","t0","requestName","GET_ROOT","GET_CHILDREN","axios","get","sent","abrupt","errors","stop","_x","_x2","apply","this","arguments","Node","_React$PureComponent","_getPrototypeOf2","_this","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","concat","onOpenModal","props","openModalAction","enrolleeId","id","handleClick","_this$props","onLoad","showChildren","sourceUrl","numberOfChildren","setLoading","setLoaded","children","childrenResult","inherits","createClass","key","value","_this2","_this$props2","title","classList","push","react_default","createElement","className","join","onClick","React","PureComponent","nodeProps","PropTypes","string","isRequired","bool","number","arrayOf","shape","func","defaultProps","connect","state","variables","dispatch","show","toggleChildren","loadChildren","loading","EmptyNode","symbol","viewBox","preserveAspectRatio","width","height","x1","y1","x2","y2","Column","nodes","map","n","i","isEmpty","EmptyNode_EmptyNode","assign","components_Node","loadRootNodeAction","root","objectSpread","NodeExplorer","findInTree","node","toConsumableArray","JSON","parse","stringify","bottom","levels","index","newLevel","reduce","set","forEach","child","parentNode","amount","sum","getOpenedChildrenWidth","reducers","needle","Spinner","ModalElement","onCloseModal","closeModal","open","detailsUrl","index_es","onClose","src","modal","NodeMatrix","_componentDidMount","didMount","_root","maxColumnSize","getLevels","clone","balancedLevels","topOffset","j","paddingAmount","offset","topPadding","generateEmptyNodes","y","bottomOffset","bottomPadding","nodeLeft","empty","lastNode","reducedBalancedLevels","reverse","splice","end","cols","level","Column_Column","Modal","components_Spinner","rootNode","matrix","matrixWidth","loadRoot","App","components_NodeMatrix","Boolean","window","location","hostname","match","defaultState","setSourcesAction","combineReducers","undefined","action","explorer","addChildren","getRoot","middleWare","thunk","createLogger","paths","document","getElementById","getAttribute","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d6ec9655.chunk.js","sourcesContent":["export default (parent, data) => ({\n    type: 'LOAD_CHILDREN_NODES',\n    parent,\n    data,\n});","export default (parent) => ({\n    type: 'TOGGLE_CHILDREN_NODES',\n    parent \n});","export default (content) => ({\n    type: 'OPEN_MODAL',\n    data: content\n});","import axios from 'axios';\n\nexport default async (requestType, url) => {\n    let response = {};\n\n    switch (requestType) {\n        case requestName.GET_ROOT:\n            response = await axios.get(url);\n            break;\n        case requestName.GET_CHILDREN:\n            response = await axios.get(url);\n            break;\n        default:\n            return {\n                errors: [\"Request not found\"]\n            }\n        }\n    \n    return response.data;\n}\n\nexport const requestName = {\n    GET_CHILDREN: 'get_children',\n    GET_ROOT: 'get_root'\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport setLoadingAction from '../../actions/Loading/setLoadingAction';\nimport setLoadedAction from '../../actions/Loading/setLoadedAction';\nimport loadChildren from '../../actions/loadChildrenAction';\nimport toggleChildren from '../../actions/toggleChildrenAction';\nimport openModalAction from '../../actions/Modal/openModalAction';\nimport RequestsManager, { requestName } from '../../utils/RequestsManager';\n\nimport './styles.css';\n\nexport class Node extends React.PureComponent {\n    onOpenModal = () => {\n        this.props.openModalAction({enrolleeId: this.props.id})\n    };\n\n    handleClick = async () => {\n        const {\n            id, onLoad, showChildren, sourceUrl, numberOfChildren,\n            setLoading, setLoaded, children,\n        } = this.props;\n        \n        if (numberOfChildren > 0) {\n            setLoading();\n            let childrenResult = [];\n\n            if (children.length === 0) {\n                const url = sourceUrl + `?id=` + id;\n                childrenResult = await RequestsManager(requestName.GET_CHILDREN, url);\n            }\n            \n            if (!childrenResult.errors) {\n                onLoad(id, showChildren, childrenResult);\n            }\n\n            setLoaded();\n        }\n    }\n\n    render() {\n        const { title, numberOfChildren } = this.props;\n        const classList = ['Node__Container'];\n\n        if (numberOfChildren === 0) {\n            classList.push('disabled');\n        }\n\n        return (\n            <div className={classList.join(' ')}>\n                <div onClick={() => this.handleClick()} className=\"Node__Title\">\n                    <span>{title}</span> <span>{numberOfChildren}</span>\n                </div>\n                <div className=\"Node__ModalButtonContainer\" onClick={this.onOpenModal}>\n                    <i className=\"fa fa-external-link\"></i>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport const nodeProps = {\n    id: PropTypes.string.isRequired,\n    parent: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    showChildren: PropTypes.bool,\n    numberOfChildren: PropTypes.number.isRequired,\n    children: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        numberOfChildren: PropTypes.number.isRequired,\n    })),\n    sourceUrl: PropTypes.string,\n    setLoading: PropTypes.func.isRequired,\n    setLoaded: PropTypes.func.isRequired\n};\nnodeProps.children = PropTypes.arrayOf(PropTypes.shape(nodeProps).isRequired);\n\nNode.propTypes = nodeProps;\n\nNode.defaultProps = {\n    showChildren: false,\n    children: [],\n}\n\nexport default connect(\n    state => ({\n        sourceUrl: state.variables.sourceUrl,\n    }),\n    dispatch => ({\n        onLoad: (id, show, children) => {\n            if (show) {\n                dispatch(toggleChildren(id));\n            } else {\n                dispatch(loadChildren(id, children));\n                dispatch(toggleChildren(id));\n            }\n        },\n        setLoading: () => { dispatch(setLoadingAction()); },\n        setLoaded: () => { dispatch(setLoadedAction()); },\n        openModalAction: (enrolleeId) => dispatch(openModalAction(enrolleeId)),\n    }),\n)(Node);","export default () => ({\n    type: 'SET_LOADING',\n    data: {\n        loading: true,\n    }\n});","export default () => ({\n    type: 'SET_LOADING_END',\n    data: {\n        loading: false,\n    }\n});","import React from 'react';\n\nimport './styles.css';\n\nexport default class EmptyNode extends React.PureComponent {\n    render() {\n        const { type } = this.props;\n        let symbol = \"\";\n        switch (type) {\n            case \"space\":\n                symbol = \" \";\n                break;\n            case \"pipe\":\n                symbol = (\n                <div className=\"EmptyNode__SVGContainer\">\n                    <svg viewBox={\"0 0 100% 100%\"} preserveAspectRatio=\"xMidYMid meet\" width=\"100%\" height=\"100%\">\n                        <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" className=\"SVG_Line\" />\n                    </svg>\n                </div>\n                );\n                break;\n            case \"line\":\n                symbol = (\n                    <div className=\"EmptyNode__SVGContainer\" >\n                        <svg viewBox={\"0 0 100% 100%\"} preserveAspectRatio=\"xMidYMid meet\" width=\"100%\" height=\"100%\">\n                            <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" className=\"SVG_Line\"/>\n                            <line x1=\"0\" y1=\"50%\" x2=\"100%\" y2=\"50%\" className=\"SVG_Line\" />\n                        </svg>\n                    </div>\n                );\n                break;\n            case \"last-line\":\n                symbol = (\n                    <div className=\"EmptyNode__SVGContainer\" >\n                        <svg viewBox={\"0 0 100% 100%\"} preserveAspectRatio=\"xMidYMid meet\" width=\"100%\" height=\"100%\">\n                            <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"50%\" className=\"SVG_Line\" />\n                            <line x1=\"0\" y1=\"50%\" x2=\"100%\" y2=\"50%\" className=\"SVG_Line\" />\n                        </svg>\n                    </div>\n                );\n                break;\n            default:\n                symbol = \"-\";\n                break;\n        }\n\n        return (\n            <div className=\"EmptyNode__Container\">\n                {symbol}\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Node, { nodeProps } from '../Node';\nimport EmptyNode from '../EmptyNode';\nimport './index.css'\n\nexport default class Column extends React.PureComponent {\n    render(){\n        const { nodes } = this.props;\n        const content = nodes.map( (n, i) => {\n            if (n.isEmpty){\n                return (<EmptyNode key={i} {...n} />);\n            }\n            return (<Node key={i} {...n} />);\n        });\n        return (\n            <div className=\"Column__Container\">{content}</div>\n        );\n    }\n}\n\nColumn.propTypes = {\n    nodes: PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.shape(nodeProps),\n        PropTypes.shape({\n            isEmpty: PropTypes.bool.isRequired,\n            type: PropTypes.string.isRequired\n        }) \n    ])),\n};","export default (root) => ({\n    type: 'LOAD_ROOT_NODE', \n    data: {...root}\n});","export default class NodeExplorer {\n    constructor(root){\n        this.root = root;\n    }\n\n    findNode(id){\n       \n        return NodeExplorer.findInTree(this.root, id);\n    }    \n\n    addChildren(parent, children){\n        const node = NodeExplorer.findInTree(this.root, parent);\n\n        if (!node.children) {\n            node.children = [];\n        }\n\n        node.children = [...node.children, ...children];        \n    }\n\n    toggleChildren(id){\n        const node = NodeExplorer.findInTree(this.root, id);\n        return node.showChildren = !node.showChildren;\n    }\n\n    getRoot(){\n        return this.root;\n    }\n\n    static clone(root){\n        return JSON.parse(JSON.stringify(root));\n    }\n\n    static getLevels(node){\n        let bottom = false;\n        let levels = [ [[node]] ];\n        let index = 0;\n\n        while(!bottom){\n            let lastLevel = levels[index].reduce((nodes, set) => [...nodes, ...set], []);\n            \n            let newLevel = lastLevel.reduce((children, node) => {\n                if (!node.children) {\n                    node.children = [];\n                }\n\n                node.children.forEach(child => {\n                    child.parentNode = node;\n                });\n\n                return node.children.length && node.showChildren ? [...children, node.children] : children;\n            }, []);\n\n            if (newLevel.length > 0){\n                levels[++index] = newLevel;\n            } else {\n                bottom = true;\n            }\n        }\n        return levels;\n    }\n\n    static generateEmptyNodes(type, amount){\n        const nodes = [];\n        for (let i = 0; i < amount; i++){\n            nodes.push({isEmpty: true, type});\n        }\n        return nodes;\n    }\n\n    static getOpenedChildrenWidth(node){\n        if (!node.showChildren || node.children.length === 0){\n            return 0;\n        }\n\n        return node.children.length + node.children.reduce((sum, child) => (NodeExplorer.getOpenedChildrenWidth(child) + sum), 0);\n    }\n\n    static getChildren(nodes){\n        nodes.reducers((children, node) => [...children, ...node.children],  )\n    }\n\n\n    static findInTree(node, id){\n        if (node.id === id){\n            return node;\n        }\n\n        if (!node.children) {\n            node.children = [];\n        }\n\n        for(let i = 0; i < node.children.length; i++){\n            const needle = NodeExplorer.findInTree(node.children[i], id);\n\n            if (needle) {\n                return needle;\n            }\n        }\n        return null;\n    }\n}","import React from 'react';\n\nimport './styles.css';\n\nconst Spinner = () => (\n    <div className=\"Spinner__Container\">\n        <div className=\"lds-dual-ring\"></div>\n    </div>\n);\n\nexport default Spinner;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Modal from \"react-responsive-modal\";\n\nimport './styles.css';\nimport closeModalAction from '../../../../actions/Modal/closeModalAction';\n\nexport class ModalElement extends React.PureComponent {\n    onCloseModal = () => {\n        this.props.closeModal();\n    };\n\n    render() {\n        const {\n            open, detailsUrl, id,\n        } = this.props;\n\n        return (\n            <Modal\n                open={open}\n                onClose={this.onCloseModal}\n            >\n                <div className=\"ModalElement__IframeContainer\">\n                    <iframe\n                        className=\"ModalElement__Iframe\"\n                        src={detailsUrl + '/associate/info/' + id}>\n                    </iframe>\n                </div>\n            </Modal>\n        )\n    }\n}\n\nexport default connect(\n    state => ({\n        open: state.modal.open,\n        detailsUrl: state.variables.detailsUrl,\n        id: state.modal.content.enrolleeId,\n    }),\n    dispatch => ({\n        closeModal: () => { dispatch(closeModalAction())}\n    }),\n)(ModalElement);\n\nModalElement.propTypes = {\n    open: PropTypes.bool.isRequired,    \n    detailsUrl: PropTypes.string,    \n}","export default () => ({\n    type: 'CLOSE_MODAL',\n    data: null\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { nodeProps } from '../Node';\nimport Column from '../Column';\nimport loadRoot from '../../actions/loadRootNodeAction';\nimport NodeExplorer from '../../utils/NodeExplorer';\nimport setLoadingAction from '../../actions/Loading/setLoadingAction';\nimport setLoadedAction from '../../actions/Loading/setLoadedAction';\nimport Spinner from '../Spinner';\nimport Modal from './__Components/Modal';\nimport RequestsManager, { requestName } from '../../utils/RequestsManager';\n\nimport './styles.css';\n\nexport class NodeMatrix extends React.PureComponent {\n    async componentDidMount() {\n        const {\n            root, didMount, sourceUrl, setLoading, setLoaded,\n        } = this.props;\n\n        if (!root) {\n            setLoading();\n            const root = await RequestsManager(requestName.GET_ROOT, sourceUrl);\n            if (!root.errors) {\n                didMount(root);\n            }\n            setLoaded();\n        }\n    }\n\n    render(){\n        const { root, maxColumnSize, loading } = this.props;\n        const levels = root ? NodeExplorer.getLevels(NodeExplorer.clone(root)) : [];\n        const balancedLevels = [];\n\n        for (let i = 0; i < levels.length; i++) {\n            balancedLevels[i] = [];\n            let topOffset = 0\n            for (let j = 0; j < levels[i].length; j++) {\n                if (levels[i][j].length > 0){\n                    const parentOffset = levels[i][j][0].parentNode ? levels[i][j][0].parentNode.offset : 0;  \n                    const paddingAmount = parentOffset - balancedLevels[i].length;\n                    const topPadding = NodeExplorer.generateEmptyNodes('space', paddingAmount);\n\n                    balancedLevels[i] = [...balancedLevels[i], ...topPadding];\n                    topOffset += paddingAmount;\n                }\n\n                for (let y = 0; y < levels[i][j].length; y++) {\n                    const node = levels[i][j][y];\n                    node.offset = ++topOffset;\n                    let bottomOffset = NodeExplorer.getOpenedChildrenWidth(node);\n                    topOffset += bottomOffset;\n                    let bottomPadding = '';\n                    \n                    bottomPadding = NodeExplorer.generateEmptyNodes('pipe', bottomOffset);\n                    balancedLevels[i] = [...balancedLevels[i], node, ...bottomPadding];\n                }\n                \n            }\n        }\n\n        for (let i = balancedLevels.length - 1; i > 0; i--) {\n            for (let j = 0; j < balancedLevels[i].length; j++) {\n                const nodeLeft = balancedLevels[i - 1][j];\n                const node = balancedLevels[i][j];\n\n                if (!node.isEmpty && nodeLeft && nodeLeft.type) {\n                    nodeLeft.type = 'line';\n                }\n            }\n        }\n\n        for (let i = balancedLevels.length - 1; i >= 0; i--) {\n            let empty = true;\n            let lastNode = true;\n            for (let j = balancedLevels[i].length -1; j > 0; j--) {\n                const node = balancedLevels[i][j];\n                if (node && node.type) {\n                    switch (node.type) {\n                        case \"pipe\":\n                            if (empty) {\n                                node.type = 'space';\n                            }\n                            break;\n                        case \"line\":\n                            if (empty || lastNode) {\n                                empty = false;\n                                lastNode = false;\n                                node.type = 'last-line';\n                            }\n                            break;\n                        default:\n                            break;\n                    }\n                } else {\n                    lastNode = true;\n                    empty = true;\n                }\n            }\n        }\n\n        const reducedBalancedLevels = balancedLevels.reverse().splice(0, maxColumnSize).reverse();\n\n        let empty = 0;\n        let end = true;\n        while (end) {\n            if (\n                reducedBalancedLevels[0]\n                 && reducedBalancedLevels[0][empty].type\n                 && reducedBalancedLevels[0][empty].type === 'space'\n            ) {\n                ++empty;\n            } else {\n                end = false;\n            }\n        }\n\n        const cols = reducedBalancedLevels.map((level, i) => (<Column key={i} nodes={level.splice(empty)} />));\n\n        return (\n            <div className=\"NodeMatrix__Container\">\n                {cols}\n                <Modal />\n                { loading ? <Spinner /> : null }\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        root: state.nodes.rootNode,\n        width: state.matrix.matrixWidth,\n        maxColumnSize: state.variables.maxColumnSize,\n        loading: state.variables.loading,\n        sourceUrl: state.variables.sourceUrl,\n    }),\n    dispatch => ({\n        didMount:  (root) => {\n            dispatch(loadRoot(root));\n        },\n        setLoading: () => {\n            dispatch(setLoadingAction());\n        },\n        setLoaded: () => {\n            dispatch(setLoadedAction());\n        }\n    }),\n)(NodeMatrix);\n\nNodeMatrix.propTypes = {\n    width: PropTypes.number.isRequired,\n    root: PropTypes.shape(nodeProps),\n    maxColumnSize: PropTypes.number.isRequired,\n    setLoading: PropTypes.func.isRequired,\n    didMount: PropTypes.func.isRequired,\n};","import React from 'react';\nimport './App.css';\nimport NodeMatrix from './components/NodeMatrix'\n\nfunction App() {\n  return (\n    <NodeMatrix width = {6} />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import openModalAction from '../actions/Modal/openModalAction';\nimport closeModalAction from '../actions/Modal/closeModalAction';\n\nconst defaultState = {\n    open: false,\n    content: {\n        enrolleeId: ''\n    }\n}\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {   \n        case openModalAction(state).type:\n            {\n                const data = {\n                    open: true,\n                    content: {\n                        ...action.data\n                    }\n                };\n\n                return {...state, ...data};\n            }            \n        case closeModalAction(state).type:\n            {\n                const data = {\n                    open: false,\n                    content: {\n                        enrolleeId: ''\n                    }\n                };\n\n                return {...state, ...data};\n            }\n        default:\n            return state\n    }\n}\n","export default (content) => ({\n    type: 'SET_SOURCE_URLS',\n    data: content\n});","import setLoadingAction from '../actions/Loading/setLoadingAction';\nimport setLoadedAction from '../actions/Loading/setLoadedAction';\nimport setSourcesAction from '../actions/setSourcesAction';\n\nconst defaultState = {\n    maxColumnSize: 5,\n    loading: false,\n    sourceUrl: '',\n    detailsUrl: '',\n}\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case setLoadingAction(state).type:\n            {\n                return {...state, ...action.data};\n            }\n        case setLoadedAction(state).type:\n            {\n                return {...state, ...action.data};\n            }\n        case setSourcesAction(state).type:\n            {\n                return {...state, ...action.data};\n            }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport nodes from './nodeReducer';\nimport matrix from './matrixReducer';\nimport modal from './modalReducer';\nimport variables from './variablesReducer';\n\nexport default combineReducers({\n    nodes,\n    matrix,\n    modal,\n    variables,\n});","import loadRoot from '../actions/loadRootNodeAction';\nimport loadChildren from '../actions/loadChildrenAction';\nimport toggleChildren from '../actions/toggleChildrenAction';\nimport NodeExplorer from '../utils/NodeExplorer';\n// import generateNodes from '../utils/NodeGenerator';\n\n// const rootNode = {\n//     id: \"1\",\n//     title: \"Root\",\n//     parent: \"0\",\n//     numberOfChildren: 3,\n// }\n\nexport default (state = { rootNode: null }, action) => {\n    switch (action.type) {\n        case loadRoot().type:\n            // const root = rootNode;\n\n            return {\n                rootNode: { ...action.data }\n            }\n\n            // return {\n            //     rootNode: { ...root }\n            // }\n        case loadChildren(0).type: {\n            const explorer = new NodeExplorer(NodeExplorer.clone(state.rootNode));\n            // const children = generateNodes(3, action.parent);\n\n            explorer.addChildren(action.parent, action.data);\n            // explorer.addChildren(action.parent, children);\n            \n            return {\n                rootNode: explorer.getRoot()\n            }\n        }\n        case toggleChildren(0).type: {\n            const explorer = new NodeExplorer(NodeExplorer.clone(state.rootNode));\n            explorer.toggleChildren(action.parent);            \n            return {\n                rootNode: explorer.getRoot()\n            } \n        }  \n        default:\n            return state\n    }\n}\n\n","\nexport default (state = {}, action) => {\n    switch (action.type) {        \n        default:\n            return {\n                matrixWidth: 6\n            }\n    }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\nconst middleWare = [\n    thunk, \n    createLogger()\n];\n\nexport default function configureStore() {\n    return createStore(\n        rootReducer,\n        applyMiddleware(...middleWare)\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/store.js';\nimport setSourcesAction from './actions/setSourcesAction';\n\nconst paths = {\n    sourceUrl: document.getElementById('rootExplorer').getAttribute('data-source'),\n    detailsUrl: document.getElementById('rootExplorer').getAttribute('data-details')\n};\n\nconst store = configureStore();\n\nstore.dispatch(setSourcesAction(paths));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('rootExplorer')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}